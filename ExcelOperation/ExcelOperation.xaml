<Activity mc:Ignorable="sap sap2010" x:Class="ExcelOperation" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:umab="clr-namespace:UiPath.Mail.Activities.Business;assembly=UiPath.Mail.Activities" xmlns:umabh="clr-namespace:UiPath.Mail.Activities.Business.HtmlEditor;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_TemplatePath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1240,1898</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ExcelOperation_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="60">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="54">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ExcelOperation" sap:VirtualizedContainerService.HintSize="695,1833" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:DateTime" Name="CurrentDate" />
      <Variable x:TypeArguments="x:String" Default="[in_Config(&quot;VBAPath&quot;).ToString]" Name="VBA_Path" />
      <Variable x:TypeArguments="x:String" Default="[in_Config(&quot;GL007DownloadPath&quot;).ToString]" Name="GL07Path" />
      <Variable x:TypeArguments="x:String" Default="[in_Config(&quot;GL010DownloadPath&quot;).ToString]" Name="GL010Path" />
      <Variable x:TypeArguments="x:String" Default="[in_Config(&quot;InputTemplate&quot;).ToString]" Name="Template" />
      <Variable x:TypeArguments="x:String" Name="GL010_200331">
        <Variable.Default>
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GL010DownloadPath_200331&quot;).ToString" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="GL010_200332">
        <Variable.Default>
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GL010DownloadPath_200332&quot;).ToString" />
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="653,1741" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <Sequence sap:VirtualizedContainerService.HintSize="615,1514" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="573,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Excel operation Started&quot;]" />
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="573,1160" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[VBA_Path]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="539,1051" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Default="CopyGL10" Name="Macro" />
                    <Variable x:TypeArguments="x:String" Name="GL007200331Path">
                      <Variable.Default>
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GL007DownloadPath_200331&quot;).ToString" />
                      </Variable.Default>
                    </Variable>
                    <Variable x:TypeArguments="x:String" Name="GL007200332Path">
                      <Variable.Default>
                        <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;GL007DownloadPath_200332&quot;).ToString" />
                      </Variable.Default>
                    </Variable>
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Switch x:TypeArguments="x:String" DisplayName="Switch" Expression="[Path.GetFileName(in_TemplatePath)]" sap:VirtualizedContainerService.HintSize="497,511" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                    <Switch.Default>
                      <Sequence sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelWriteCell Cell="C5" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Operations" Text="[GL07Path]" />
                        <ui:ExcelWriteCell Cell="C6" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_3" SheetName="Operations" Text="[GL010Path]" />
                      </Sequence>
                    </Switch.Default>
                    <Sequence x:Key="Broker Commission Rec.xlsx" sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelWriteCell Cell="C5" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" SheetName="Operations" Text="[GL007200331Path]" />
                      <ui:ExcelWriteCell Cell="C6" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" SheetName="Operations" Text="[GL010_200331]" />
                    </Sequence>
                    <Sequence x:Key="Dev TA Payable Rec.xlsx" sap:VirtualizedContainerService.HintSize="376,306" sap2010:WorkflowViewState.IdRef="Sequence_8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelWriteCell Cell="C5" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="Operations" Text="[GL007200332Path]" />
                      <ui:ExcelWriteCell Cell="C6" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_9" SheetName="Operations" Text="[GL010_200332]" />
                    </Sequence>
                  </Switch>
                  <ui:ExcelWriteCell Cell="C7" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="497,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="Operations" Text="[in_TemplatePath]" />
                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="497,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelWriteCell Cell="C9" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" SheetName="Operations" Text="[FinalReportPath]" />
                      </Sequence>
                    </ui:CommentOut.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:CommentOut>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="497,91" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;VBA invoked&quot;]" />
                  <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Execute Macro" sap:VirtualizedContainerService.HintSize="497,59" sap2010:WorkflowViewState.IdRef="ExecuteMacro_1" MacroName="[Macro]" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="573,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Excel operation completed&quot;]" />
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="480,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="476,526" sap2010:WorkflowViewState.IdRef="Sequence_4">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="ExcepBody" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Error" Message="[&quot;SE: &quot;+ exception.Message]" />
              <umab:CreateHtmlContent DisplayName="Create HTML Content" sap:VirtualizedContainerService.HintSize="434,151" HtmlContent="[ExcepBody]" sap2010:WorkflowViewState.IdRef="CreateHtmlContent_1">
                <umab:CreateHtmlContent.HtmlContentArg>
                  <umabh:HtmlContentArgument FilePath=".data/HtmlContent2.html">
                    <umabh:HtmlContentArgument.RuntimeImages>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                    </umabh:HtmlContentArgument.RuntimeImages>
                    <umabh:HtmlContentArgument.ValueMappings>
                      <scg:List x:TypeArguments="umabh:HtmlValueMappingBase" Capacity="0" />
                    </umabh:HtmlContentArgument.ValueMappings>
                  </umabh:HtmlContentArgument>
                </umab:CreateHtmlContent.HtmlContentArg>
              </umab:CreateHtmlContent>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SendExceptionMail workflow" sap:VirtualizedContainerService.HintSize="434,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Hubble\WorkFlows\SendExceptionMail.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_ExcepRecepint">[in_Config("ExceptionMailReceipt").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_ExcepSubject">[Environment.MachineName+": "+ "Got an Exception in Excel Operation"]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_ExcepBody">[ExcepBody]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_ExcepCC">[in_Config("ExceptionMailReceiptCC").ToString]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>